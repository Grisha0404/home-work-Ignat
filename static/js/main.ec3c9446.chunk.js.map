{"version":3,"sources":["App.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","SuperSelect","options","onChange","onChangeOption","restProps","mappedOptions","map","el","i","key","value","e","currentTarget","SuperRadio","type","name","onChangeCallback","o","checked","arr","HW7","useState","console","log","App","className","s","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,MAAQ,qB,gNCqC/DC,EA7BqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACAC,EAGH,EAHGA,SAAUC,EAGb,EAHaA,eACPC,EAEN,iBACKC,EAA8BJ,EAAUA,EAAQK,KAAI,SAACC,EAAIC,GAAL,OACtD,4BAAQC,IAAKF,EAAK,IAAMC,EAAGE,MAAOH,GAC7BA,MAEJ,GAWL,OACI,0CAAQL,SAVa,SAACS,GAClBR,GACAA,EAAeQ,EAAEC,cAAcF,OAEnCR,GAAYA,EAASS,KAMmBP,GACnCC,I,gECcEQ,EAtCmC,SAAC,GAO9C,EALGC,KAKF,IALQC,EAKT,EALSA,KACNd,EAIH,EAJGA,QAASS,EAIZ,EAJYA,MACTR,EAGH,EAHGA,SAAUC,EAGb,EAHaA,eAIRa,GADL,iBACwB,SAACL,GAClBR,GACAA,EAAeQ,EAAEC,cAAcF,OAEnCR,GAAYA,EAASS,KAKnBN,EAA8BJ,EAAUA,EAAQK,KAAI,SAACW,EAAGT,GAAJ,OACtD,2BAAOC,IAAKM,EAAO,IAAMP,GACrB,2BACIM,KAAM,QACNJ,MAAOO,EACPF,KAAMA,EACNG,QAASR,IAAUO,EACnBf,SAAUc,IAGbC,MAEJ,GAEL,OACI,oCACKZ,ICtCPc,EAAM,CAAC,IAAK,IAAI,KAoCPC,MAlCf,WACI,MAAgCC,mBAASF,EAAI,IAA7C,mBAAOT,EAAP,KAAcP,EAAd,KAEA,OADJmB,QAAQC,IAAIb,GAEJ,6BACI,6BADJ,cAKI,6BACI,kBAAC,EAAD,CACIT,QAASkB,EACTT,MAAOA,EACPP,eAAgBA,KAGxB,6BACI,kBAAC,EAAD,CACIY,KAAM,QACNd,QAASkB,EACTT,MAAOA,EACPP,eAAgBA,KAIxB,6BAIA,+BCVGqB,MAff,WACI,OACI,yBAAKC,UAAWC,IAAEF,KACd,iDAOA,kBAAC,EAAD,QCRGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec3c9446.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1aDgf\",\"poster\":\"App_poster__1i__Z\",\"block\":\"App_block__2wSeW\"};","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[]= options ? options.map((el, i) => ( // map options with key\r\n        <option key={el + '-' + i} value={el}>\r\n            {el}\r\n        </option>\r\n    )) : [] // map options with key\r\n\r\n    const onChangeCallback = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n        onChange && onChange(e)\r\n\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps} >\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (options:string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n        onChange && onChange(e)\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n\r\n    const mappedOptions: JSX.Element[]= options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                value={o}\r\n                name={name}\r\n                checked={value === o}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y','z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\nconsole.log(value)\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from \"./p2-homeworks/h1/HW1\"\r\nimport HW2 from \"./p2-homeworks/h2/HW2\";\r\nimport HW3 from \"./p2-homeworks/h3/HW3\";\r\nimport HW4 from \"./p2-homeworks/h4/HW4\";\r\nimport HW6 from \"./p2-homeworks/h6/HW6\";\r\nimport HW5 from \"./p2-homeworks/h5/HW5\";\r\nimport HW7 from \"./p2-homeworks/h7/HW7\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>\r\n            <HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>\r\n            <HW6/>*/}\r\n            <HW7/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}