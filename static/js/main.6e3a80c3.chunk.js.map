{"version":3,"sources":["p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h10/bll/store.ts","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h12/HW12.tsx","App.tsx","reportWebVitals.js","index.js","p2-homeworks/h12/HW12.module.css","App.module.css"],"names":["initState","loadingStatus","theme","reducers","combineReducers","loading","state","action","type","status","themeColor","options","store","createStore","window","SuperSelect","onChange","onChangeOption","restProps","mappedOptions","map","el","i","key","value","e","currentTarget","themes","HW12","useSelector","dispatch","useDispatch","className","s","option","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAAMA,EAAY,CACdC,eAAe,G,OCCbD,EAAY,CACdE,MAAO,QCCLC,EAAWC,YAAgB,CAC7BC,QFC0B,WAA2D,IAA1DC,EAAyD,uDAAjDN,EAAWO,EAAsC,uCACpF,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAO,2BACAF,GADP,IACcL,cAAeM,EAAOE,SAGxC,QACI,OAAOH,IERfI,WDAwB,WAA+E,IAA9EJ,EAA6E,uDAAtDN,EAAWO,EAA2C,uCACtG,OAAQA,EAAOC,MACX,IAAK,qBAED,OAAO,2BAAIF,GAAX,IAAkBJ,MAAOK,EAAOI,UAEpC,QACI,OAAOL,MCJNM,EAAQC,YAAYV,GAKjCW,OAAOF,MAAQA,E,qECwBAG,EA7BqC,SAAC,GAM/C,IAJEJ,EAIH,EAJGA,QACAK,EAGH,EAHGA,SAAUC,EAGb,EAHaA,eACPC,EAEN,iBACKC,EAA8BR,EAAUA,EAAQS,KAAI,SAACC,EAAIC,GAAL,OACtD,4BAAQC,IAAKF,EAAK,IAAMC,EAAGE,MAAOH,GAC7BA,MAEJ,GAWL,OACI,0CAAQL,SAVa,SAACS,GAClBR,GACAA,EAAeQ,EAAEC,cAAcF,OAEnCR,GAAYA,EAASS,KAMmBP,GACnCC,ICzBPQ,EAAS,CAAC,OAAQ,MAAO,QA6BhBC,MA3Bf,WAEI,IAAM1B,EAAQ2B,aAAkC,SAACvB,GAAD,OAASA,EAAMI,WAAWR,SACpE4B,EAAWC,cAOjB,OACI,yBAAKC,UAAWC,IAAE/B,IACd,6BACA,0BAAM8B,UAAWC,IAAE/B,EAAQ,UAA3B,eAEI,kBAAC,EAAD,CAAaS,QAASgB,EAAQV,eAVjB,SAACiB,GACtBJ,EHIG,CACHtB,KAAM,qBACNG,QGNsBuB,QAgBlB,+BCKGC,MAtBf,WACI,OACI,yBAAKH,UAAWC,IAAEE,KACd,iDAYA,kBAAC,IAAD,CAAUvB,MAAOA,GACb,kBAAC,EAAD,SCnBDwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAY,wBAAwB,IAAM,kBAAkB,WAAW,uBAAuB,KAAO,mBAAmB,YAAY,0B,kBCAhLD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,MAAQ,sB","file":"static/js/main.6e3a80c3.chunk.js","sourcesContent":["const initState = {\n    loadingStatus: false\n}\n\nexport type initStateType = typeof initState\n\nexport const loadingReducer = (state = initState, action: ActionType): initStateType => { // fix any\n    switch (action.type) {\n        case 'CHANGE-STATUS': {\n            return {\n                ...state, loadingStatus: action.status\n            }\n        }\n        default:\n            return state\n    }\n}\n\ntype ActionType = LoadingACType\ntype LoadingACType = ReturnType<typeof loadingAC>\n\nexport const loadingAC = (status: boolean) => {\n    return {\n        type: 'CHANGE-STATUS',\n        status\n    } as const\n} // fix any\n","export type initStateType = typeof initState\n\nconst initState = {\n    theme: 'dark'\n};\n\nexport const themeReducer = (state: initStateType = initState, action: changeThemeType): initStateType => { // fix any\n    switch (action.type) {\n        case \"CHANGE-COLOR-THEME\": {\n\n            return {...state, theme: action.options};\n        }\n        default:\n            return state;\n    }\n};\n\ntype changeThemeType = ReturnType<typeof changeThemeC>\n\nexport const changeThemeC = (options:string) => {\n    return {\n        type: \"CHANGE-COLOR-THEME\",\n        options\n    }\n}; // fix any","import {loadingReducer} from './loadingReducer'\nimport {combineReducers, createStore} from \"redux\";\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\n\nconst reducers = combineReducers({\n    loading: loadingReducer,\n    themeColor: themeReducer\n})\n\nexport const store = createStore(reducers)\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[]= options ? options.map((el, i) => ( // map options with key\n        <option key={el + '-' + i} value={el}>\n            {el}\n        </option>\n    )) : [] // map options with key\n\n    const onChangeCallback = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (onChangeOption) {\n            onChangeOption(e.currentTarget.value)\n        }\n        onChange && onChange(e)\n\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps} >\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React from \"react\";\nimport s from \"./HW12.module.css\";\nimport SuperSelect from \"../h7/common/c5-SuperSelect/SuperSelect\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeThemeC, initStateType} from \"./bll/themeReducer\";\nimport {AppStoreType} from \"../h10/bll/store\";\nimport SuperRadio from \"../h7/common/c6-SuperRadio/SuperRadio\";\n\nconst themes = ['dark', 'red', 'some'];\n\nfunction HW12() {\n\n    const theme = useSelector<AppStoreType, string>((state)=>state.themeColor.theme);\n    const dispatch = useDispatch() // useSelector\n\n    const onChangeCallback = (option:string) =>{\n        dispatch(changeThemeC(option))\n    }\n    // useDispatch, onChangeCallback\n\n    return (\n        <div className={s[theme]}>\n            <hr/>\n            <span className={s[theme + '-text']}>\n                homeworks 12\n                <SuperSelect options={themes} onChangeOption={onChangeCallback}/>\n                {/*<SuperRadio options={themes} onChangeOption={onChangeCallback}/>*/}\n            </span>\n\n            {/*should work (должно работать)*/}\n            {/*SuperSelect or SuperRadio*/}\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW12;\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from \"./p2-homeworks/h1/HW1\"\nimport HW2 from \"./p2-homeworks/h2/HW2\";\nimport HW3 from \"./p2-homeworks/h3/HW3\";\nimport HW4 from \"./p2-homeworks/h4/HW4\";\nimport HW6 from \"./p2-homeworks/h6/HW6\";\nimport HW5 from \"./p2-homeworks/h5/HW5\";\nimport HW9 from \"./p2-homeworks/h9/HW9\";\nimport HW10 from \"./p2-homeworks/h10/HW10\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./p2-homeworks/h10/bll/store\";\nimport HW11 from \"./p2-homeworks/h11/HW11\";\nimport HW12 from \"./p2-homeworks/h12/HW12\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n            {/*<HW6/>*/}\n            {/*<HW9/>*/}\n            {/*<Provider store={store}>\n            <HW10/>\n            </Provider>*/}\n            {/*<HW11/>*/}\n            <Provider store={store}>\n                <HW12/>\n            </Provider>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__-yEnK\",\"dark-text\":\"HW12_dark-text__3aY9r\",\"red\":\"HW12_red__b8fxn\",\"red-text\":\"HW12_red-text__Xlm6C\",\"some\":\"HW12_some__2eRaq\",\"some-text\":\"HW12_some-text__1-Wyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"poster\":\"App_poster__2gmdg\",\"block\":\"App_block__3ooQu\"};"],"sourceRoot":""}